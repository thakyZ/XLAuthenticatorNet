root = true

[*]
charset = utf-8
tab_width = 4
indent_size = 2
indent_style = space

#### Whitespace Preferences ####

# Indentation preferences
dotnet_style_operator_placement_when_wrapping = beginning_of_line

# New line preferences
end_of_line = crlf
insert_final_newline = true

#### Code Style Preferences ####

# Expression-level preferences
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_prefer_collection_expression = when_types_loosely_match:suggestion
dotnet_style_namespace_match_folder = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = false:silent
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion

# Field preferences
dotnet_style_readonly_field = true:suggestion

# Language keywords vs BCL type preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent

# Newline preferences
dotnet_style_allow_multiple_blank_lines_experimental = false:silent
dotnet_style_allow_statement_immediately_after_block_experimental = false:silent

# Parameter preferences
dotnet_code_quality_unused_parameters = all:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_operators = always_for_clarity:suggestion

# this. and Me. preferences
dotnet_style_qualification_for_field = true:silent
dotnet_style_qualification_for_property = true:silent
dotnet_style_qualification_for_method = true:silent
dotnet_style_qualification_for_event = true:silent

[*.{cs,vb}]
#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

[*.cs]
#### Whitespace Preferences ####

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = flush_left

# New line preferences
csharp_new_line_before_open_brace = none
csharp_new_line_before_else = false
csharp_new_line_before_catch = false
csharp_new_line_before_finally = false
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Space preferences
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_after_cast = false
csharp_space_around_declaration_statements = ignore
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_binary_operators = before_and_after

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

#### Code Style Preferences ####

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:suggestion

# Code-block preferences
csharp_prefer_simple_using_statement = true:silent
csharp_prefer_braces = true:silent
csharp_style_namespace_declarations = file_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = false:warning
csharp_style_prefer_primary_constructors = false:suggestion
csharp_prefer_system_threading_lock = true:suggestion

# Expression-bodied preferences
csharp_style_expression_bodied_methods = when_on_single_line:silent
csharp_style_expression_bodied_constructors = when_on_single_line:silent
csharp_style_expression_bodied_operators = when_on_single_line:silent
csharp_style_expression_bodied_properties = when_on_single_line:silent
csharp_style_expression_bodied_indexers = when_on_single_line:silent
csharp_style_expression_bodied_accessors = when_on_single_line:silent
csharp_style_expression_bodied_lambdas = when_on_single_line:silent
csharp_style_expression_bodied_local_functions = when_on_single_line:silent

# Expression-level preferences
csharp_style_throw_expression = true:suggestion
csharp_style_prefer_null_check_over_type_check = false:suggestion
csharp_prefer_simple_default_expression = true:silent
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:silent
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# Modifier preferences
csharp_prefer_static_local_function = false:silent
csharp_prefer_static_anonymous_function = false:silent
csharp_style_prefer_readonly_struct = true:suggestion
csharp_style_prefer_readonly_struct_member = true:suggestion

# Newline preferences
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false:silent
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false:silent
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = false:silent
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = false:silent

# Null-checking preferences
csharp_style_conditional_delegate_call = true:suggestion

# Pattern Matching preferences
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_pattern_matching = true:silent
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion

# var preferences
csharp_style_var_for_built_in_types = false:silent
csharp_style_var_when_type_is_apparent = true:silent
csharp_style_var_elsewhere = false:silent

#### Naming style ####

# Naming rules
dotnet_naming_rule.async_method_should_be_ends_with_async.severity = suggestion
dotnet_naming_rule.async_method_should_be_ends_with_async.symbols = async_method
dotnet_naming_rule.async_method_should_be_ends_with_async.style = ends_with_async

dotnet_naming_rule.event_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.event_should_be_pascal_case.symbols = event
dotnet_naming_rule.event_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.internal_or_public_field_should_be_camel_case.severity = suggestion
dotnet_naming_rule.internal_or_public_field_should_be_camel_case.symbols = internal_or_public_field
dotnet_naming_rule.internal_or_public_field_should_be_camel_case.style = camel_case

dotnet_naming_rule.private_field_should_be_camel_case_begins_with_underscore.severity = suggestion
dotnet_naming_rule.private_field_should_be_camel_case_begins_with_underscore.symbols = private_field
dotnet_naming_rule.private_field_should_be_camel_case_begins_with_underscore.style = camel_case_begins_with_underscore

dotnet_naming_rule.internal_or_public_readonly_should_be_camel_case.severity = suggestion
dotnet_naming_rule.internal_or_public_readonly_should_be_camel_case.symbols = internal_or_public_readonly
dotnet_naming_rule.internal_or_public_readonly_should_be_camel_case.style = camel_case

dotnet_naming_rule.private_readonly_should_be_camel_case_begins_with_underscore.severity = suggestion
dotnet_naming_rule.private_readonly_should_be_camel_case_begins_with_underscore.symbols = private_readonly
dotnet_naming_rule.private_readonly_should_be_camel_case_begins_with_underscore.style = camel_case_begins_with_underscore

dotnet_naming_rule.internal_or_public_static_field_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.internal_or_public_static_field_should_be_pascal_case.symbols = internal_or_public_static_field
dotnet_naming_rule.internal_or_public_static_field_should_be_pascal_case.style = camel_case_begins_with_underscore

dotnet_naming_rule.private_static_field_should_be_pascal_case_begins_with_underscore.severity = suggestion
dotnet_naming_rule.private_static_field_should_be_pascal_case_begins_with_underscore.symbols = private_static_field
dotnet_naming_rule.private_static_field_should_be_pascal_case_begins_with_underscore.style = camel_case_begins_with_underscore

dotnet_naming_rule.internal_or_public_static_readonly_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.internal_or_public_static_readonly_should_be_pascal_case.symbols = internal_or_public_static_readonly
dotnet_naming_rule.internal_or_public_static_readonly_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_static_readonly_should_be_camel_case_begins_with_underscore.severity = suggestion
dotnet_naming_rule.private_static_readonly_should_be_camel_case_begins_with_underscore.symbols = private_static_readonly
dotnet_naming_rule.private_static_readonly_should_be_camel_case_begins_with_underscore.style = camel_case_begins_with_underscore

dotnet_naming_rule.internal_or_public_constants_should_be_upper_case.severity = suggestion
dotnet_naming_rule.internal_or_public_constants_should_be_upper_case.symbols = internal_or_public_constants
dotnet_naming_rule.internal_or_public_constants_should_be_upper_case.style = upper_case

dotnet_naming_rule.private_constants_should_be_upper_case_begins_with_underscore.severity = suggestion
dotnet_naming_rule.private_constants_should_be_upper_case_begins_with_underscore.symbols = private_constants
dotnet_naming_rule.private_constants_should_be_upper_case_begins_with_underscore.style = upper_case_begins_with_underscore

#dotnet_naming_rule.unused_parameter_should_be_camel_case_begins_with_underscore.severity = suggestion
#dotnet_naming_rule.unused_parameter_should_be_camel_case_begins_with_underscore.symbols = unused_parameter
#dotnet_naming_rule.unused_parameter_should_be_camel_case_begins_with_underscore.style = camel_case_begins_with_underscore

# Symbol specifications
dotnet_naming_symbols.async_method.applicable_kinds = event, delegate, method, local_function
dotnet_naming_symbols.async_method.applicable_accessibilities = *
dotnet_naming_symbols.async_method.required_modifiers = abstract, async, static

dotnet_naming_symbols.event.applicable_kinds = event
dotnet_naming_symbols.event.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.event.required_modifiers = 

dotnet_naming_symbols.internal_or_public_field.applicable_kinds = field
dotnet_naming_symbols.internal_or_public_field.applicable_accessibilities = public, internal, protected_internal
dotnet_naming_symbols.internal_or_public_field.required_modifiers = 

dotnet_naming_symbols.private_field.applicable_kinds = field
dotnet_naming_symbols.private_field.applicable_accessibilities = private, private_protected
dotnet_naming_symbols.private_field.required_modifiers = 

dotnet_naming_symbols.internal_or_public_readonly.applicable_kinds = field, local
dotnet_naming_symbols.internal_or_public_readonly.applicable_accessibilities = public, internal, protected_internal
dotnet_naming_symbols.internal_or_public_readonly.required_modifiers = readonly

dotnet_naming_symbols.private_readonly.applicable_kinds = field, local
dotnet_naming_symbols.private_readonly.applicable_accessibilities = private, private_protected
dotnet_naming_symbols.private_readonly.required_modifiers = readonly

dotnet_naming_symbols.internal_or_public_static_field.applicable_kinds = field
dotnet_naming_symbols.internal_or_public_static_field.applicable_accessibilities = public, internal, protected_internal
dotnet_naming_symbols.internal_or_public_static_field.required_modifiers = static

dotnet_naming_symbols.private_static_field.applicable_kinds = field
dotnet_naming_symbols.private_static_field.applicable_accessibilities = private, private_protected
dotnet_naming_symbols.private_static_field.required_modifiers = static

dotnet_naming_symbols.internal_or_public_static_readonly.applicable_kinds = 
dotnet_naming_symbols.internal_or_public_static_readonly.applicable_accessibilities = public, internal, protected_internal
dotnet_naming_symbols.internal_or_public_static_readonly.required_modifiers = readonly, static

dotnet_naming_symbols.private_static_readonly.applicable_kinds = field, local
dotnet_naming_symbols.private_static_readonly.applicable_accessibilities = private, private_protected
dotnet_naming_symbols.private_static_readonly.required_modifiers = readonly, static

dotnet_naming_symbols.internal_or_public_constants.applicable_kinds = field, local
dotnet_naming_symbols.internal_or_public_constants.applicable_accessibilities = public, internal, protected_internal
dotnet_naming_symbols.internal_or_public_constants.required_modifiers = const

dotnet_naming_symbols.private_constants.applicable_kinds = field, local
dotnet_naming_symbols.private_constants.applicable_accessibilities = private, private_protected
dotnet_naming_symbols.private_constants.required_modifiers = const

dotnet_naming_symbols.unused_parameter.applicable_kinds = parameter
dotnet_naming_symbols.unused_parameter.applicable_accessibilities = 
dotnet_naming_symbols.unused_parameter.required_modifiers = 

# Naming styles
dotnet_naming_style.ends_with_async.required_prefix = 
dotnet_naming_style.ends_with_async.required_suffix = Async
dotnet_naming_style.ends_with_async.word_separator = 
dotnet_naming_style.ends_with_async.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.pascal_case_begins_with_underscore.required_prefix = _
dotnet_naming_style.pascal_case_begins_with_underscore.required_suffix = 
dotnet_naming_style.pascal_case_begins_with_underscore.word_separator = 
dotnet_naming_style.pascal_case_begins_with_underscore.capitalization = pascal_case

dotnet_naming_style.camel_case.required_prefix = 
dotnet_naming_style.camel_case.required_suffix = 
dotnet_naming_style.camel_case.word_separator = 
dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_style.camel_case_begins_with_underscore.required_prefix = _
dotnet_naming_style.camel_case_begins_with_underscore.required_suffix = 
dotnet_naming_style.camel_case_begins_with_underscore.word_separator = 
dotnet_naming_style.camel_case_begins_with_underscore.capitalization = camel_case

dotnet_naming_style.upper_case.required_prefix = 
dotnet_naming_style.upper_case.required_suffix = 
dotnet_naming_style.upper_case.word_separator = _
dotnet_naming_style.upper_case.capitalization = all_upper

dotnet_naming_style.upper_case_begins_with_underscore.required_prefix = _
dotnet_naming_style.upper_case_begins_with_underscore.required_suffix = 
dotnet_naming_style.upper_case_begins_with_underscore.word_separator = _
dotnet_naming_style.upper_case_begins_with_underscore.capitalization = all_upper

#### DotNET Analyzer Preferences ####

# AV1500: Member or local function contains too many statements
dotnet_diagnostic.AV1500.severity = none

# AV2407: Region should be removed
dotnet_diagnostic.AV2407.severity = none

# AV1135: Properties, arguments and return values representing strings, collections or tasks should never be `null`
dotnet_diagnostic.AV1135.severity = none

# AV1553: Do not use optional parameters with default value null for strings, collections or tasks
dotnet_diagnostic.AV1553.severity = none

# AV1561: Signature contains too many parameters
dotnet_diagnostic.AV1561.severity = none

# AV1564: Parameter in public or internal member is of type bool or bool?
dotnet_diagnostic.AV1564.severity = none

# AV1535: Missing block in case or default clause of switch statement
dotnet_diagnostic.AV1535.severity = none

# AV1210: Catch a specific exception instead of Exception, SystemException or ApplicationException
dotnet_diagnostic.AV1210.severity = none

# IDE0046: Convert to conditional expression
dotnet_diagnostic.IDE0046.severity = none

# MA0026: Fix TODO comment
dotnet_diagnostic.MA0026.severity = none

# MA0055: Do not use finalizer
dotnet_diagnostic.MA0055.severity = none

# MA0041: Make property static (deprecated, use CA1822 instead)
dotnet_diagnostic.MA0041.severity = none

# MA0038: Make method static (deprecated, use CA1822 instead)
dotnet_diagnostic.MA0038.severity = none

# IDE0045: Convert to conditional expression
dotnet_diagnostic.IDE0045.severity = none

# IDE0045: Analyzer option is obsolete
dotnet_diagnostic.ROS0002.severity = none

# ROS0003: Analyzer requires config option to be specified
dotnet_diagnostic.ROS0003.severity = suggestion

# SYSLIB1090: 'GeneratedComInterfaceType' does not support the 'ComInterfaceType' value supplied to 'InterfaceTypeAttribute' on the same type.
dotnet_diagnostic.SYSLIB1090.severity = error

# Serilog001: Exception not passed as first argument
dotnet_diagnostic.Serilog001.severity = warning

# Serilog002: MessageTemplate verifier
dotnet_diagnostic.Serilog002.severity = error

# Serilog003: Property binding verifier
dotnet_diagnostic.Serilog003.severity = error

# Serilog004: Constant MessageTemplate verifier
dotnet_diagnostic.Serilog004.severity = warning

# Serilog005: Unique Property name verifier
dotnet_diagnostic.Serilog005.severity = error

# Serilog006: Pascal Property name verifier
dotnet_diagnostic.Serilog006.severity = warning

# Serilog007: Anonymous objects use destructuring hint verifier
dotnet_diagnostic.Serilog007.severity = warning

# Serilog008: Contextual loggers use the correct context verifier
dotnet_diagnostic.Serilog008.severity = warning

# CA1200: Avoid using cref tags with a prefix
dotnet_diagnostic.CA1200.severity = suggestion
